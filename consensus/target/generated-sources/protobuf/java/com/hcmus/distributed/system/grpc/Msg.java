// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg.proto

package com.hcmus.distributed.system.grpc;

public final class Msg {
  private Msg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hcmus_distributed_system_grpc_VotingRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hcmus_distributed_system_grpc_VotingRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hcmus_distributed_system_grpc_VotingResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hcmus_distributed_system_grpc_VotingResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tMsg.proto\022!com.hcmus.distributed.syste" +
      "m.grpc\"h\n\rVotingRequest\022\013\n\003pid\030\001 \001(\t\022\013\n\003" +
      "msg\030\002 \001(\t\022\022\n\nisTruthful\030\003 \001(\010\022\027\n\017nodeNee" +
      "dConfirm\030\004 \001(\t\022\020\n\010timeSend\030\005 \001(\003\"l\n\016Voti" +
      "ngResponse\022\013\n\003pid\030\001 \001(\t\022\013\n\003msg\030\002 \001(\t\022\022\n\n" +
      "isTruthful\030\003 \001(\010\022\027\n\017nodeNeedConfirm\030\004 \001(" +
      "\t\022\023\n\013timeReceive\030\005 \001(\0032|\n\rVotingService\022" +
      "k\n\004vote\0220.com.hcmus.distributed.system.g" +
      "rpc.VotingRequest\0321.com.hcmus.distribute" +
      "d.system.grpc.VotingResponseB\002P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_hcmus_distributed_system_grpc_VotingRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_hcmus_distributed_system_grpc_VotingRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hcmus_distributed_system_grpc_VotingRequest_descriptor,
        new java.lang.String[] { "Pid", "Msg", "IsTruthful", "NodeNeedConfirm", "TimeSend", });
    internal_static_com_hcmus_distributed_system_grpc_VotingResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_hcmus_distributed_system_grpc_VotingResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hcmus_distributed_system_grpc_VotingResponse_descriptor,
        new java.lang.String[] { "Pid", "Msg", "IsTruthful", "NodeNeedConfirm", "TimeReceive", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
